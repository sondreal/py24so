name: Publish to PyPI

on:
  release:
    types: [created]
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release (e.g., 0.1.0)'
        required: true

jobs:
  build-and-publish:
    name: Build and publish to PyPI
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Update version if manually triggered
      if: github.event_name == 'workflow_dispatch'
      run: |
        # Replace version in pyproject.toml
        sed -i "s/version = \"[0-9]*\.[0-9]*\.[0-9]*\"/version = \"${{ github.event.inputs.version }}\"/g" pyproject.toml
        # Create a tag for this version
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add pyproject.toml
        git commit -m "Bump version to ${{ github.event.inputs.version }}"
        git tag -a "v${{ github.event.inputs.version }}" -m "Release v${{ github.event.inputs.version }}"
        git push origin "v${{ github.event.inputs.version }}"
        
    - name: Install build dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build twine
        
    - name: Build package
      run: |
        python -m build
        
    - name: Check package
      run: |
        python -m twine check dist/*
        
    - name: Test with pytest
      run: |
        pip install .[dev]
        pytest tests/unit
        
    - name: Publish to PyPI
      if: success()
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        password: ${{ secrets.PYPI_API_TOKEN }}
        # Uncomment the following line to publish to Test PyPI first
        # repository_url: https://test.pypi.org/legacy/

# NOTE: You need to add a PYPI_API_TOKEN secret in your GitHub repository settings
# 1. Go to PyPI and create an API token: https://pypi.org/manage/account/token/
# 2. Go to your GitHub repo settings -> Secrets -> Actions -> New repository secret
# 3. Name it PYPI_API_TOKEN and paste the token value 